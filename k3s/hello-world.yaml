apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-hello-world
  namespace: myapplication
  annotations:
    desc: node app, which gives back a string
# Pod definition. A pod can manage more than one container
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
# Tell kubernetes deployment which pods to manage (label based system)
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
        labels:
          app: hello-world
        annotations:
          desc: webserver
    spec:
      containers: 
      - name: pod-hello-world
        image: goloroden/hello-world:latest
        env:
        - name: MESSAGE
          value: Hello, User!
        ports:
        - name: app-http
          containerPort: 3000
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            cpu: "150m"
            memory: "150Mi"

--- 
# Services in kubernetes are used to make persistent addresses to pods or a group of pods
# So a loadbalancer for those pod instances

apiVersion: v1
kind: Service
metadata:
  name: service-hello-world
  namespace: myapplication
spec:
  selector:
    app: hello-world
  ports:
  - name: http
    port: 80
    targetPort: app-http # redirect incomping traffic (port 80) to one of the service managed pods which are running there app on port 3000
  type: NodePort


--- 
